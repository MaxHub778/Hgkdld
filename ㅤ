local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")

local Config = {
    Title = "Triple Hub - Blox Fruits [ Free ]",
    SubTitle = "by Tobii",
    Theme = "Dark"
}

local ThemeColors = {
    Amethyst = Color3.fromRGB(110, 80, 180),
    Dark = Color3.fromRGB(35, 35, 35),
    Light = Color3.fromRGB(235, 235, 235),
    Discord = Color3.fromRGB(54, 57, 63)
}

local currentColor = ThemeColors[Config.Theme] or ThemeColors.Amethyst
local patched = {}
local hubGui, hubBtn = nil, nil

local function Normalize(name)
    return name:gsub("%s+", ""):lower()
end

local function IsInsideHub(obj)
    while obj do
        local n = Normalize(obj.Name)
        if n == "screengui" or n == "bananacathubbtn" then return true end
        obj = obj.Parent
    end
    return false
end

local function IsInsideBananaBtn(obj)
    while obj do
        if Normalize(obj.Name) == "bananacathubbtn" then return true end
        obj = obj.Parent
    end
    return false
end

local function LockColor(obj)
    if obj:IsA("GuiObject") then
        obj.BackgroundColor3 = currentColor
        obj:GetPropertyChangedSignal("BackgroundColor3"):Connect(function()
            obj.BackgroundColor3 = currentColor
        end)
    end
end

local function DestroyImageIfInButton(obj)
    if obj:IsA("ImageLabel") and IsInsideBananaBtn(obj) then
        pcall(function() obj:Destroy() end)
    end
end

local function PatchObject(obj)
    if patched[obj] then return end
    patched[obj] = true

    pcall(function()
        if obj:IsA("TextLabel") then
            local text = obj.Text:lower()
            if text:find("banana cat hub") then
                obj.Text = Config.Title
            elseif text:find("by obii") then
                obj.Text = Config.SubTitle
            end
        end

        if obj:IsA("GuiObject") and IsInsideHub(obj) then
            LockColor(obj)
        end

        if obj:IsA("Frame") and Normalize(obj.Name) == "dutdut" and IsInsideHub(obj) then
            obj.BackgroundColor3 = Color3.fromRGB(90, 60, 150)
            obj:GetPropertyChangedSignal("BackgroundColor3"):Connect(function()
                obj.BackgroundColor3 = Color3.fromRGB(90, 60, 150)
            end)
        end

        DestroyImageIfInButton(obj)
    end)
end

local function PatchGUI(gui)
    for _, obj in ipairs(gui:GetDescendants()) do
        PatchObject(obj)
    end
    gui.DescendantAdded:Connect(PatchObject)
end

local function TryActivateBoth()
    if hubGui and hubBtn and not hubGui.Enabled and not hubBtn.Enabled then
        task.wait(0.25)
        PatchGUI(hubGui)
        PatchGUI(hubBtn)
        hubGui.Enabled = true
        hubBtn.Enabled = true
    end
end

CoreGui.ChildAdded:Connect(function(gui)
    local name = Normalize(gui.Name)
    if name == "screengui" then
        hubGui = gui
        gui.Enabled = false
        TryActivateBoth()
    elseif name == "bananacathubbtn" then
        hubBtn = gui
        gui.Enabled = false
        TryActivateBoth()
        for _, obj in ipairs(gui:GetDescendants()) do
            DestroyImageIfInButton(obj)
        end
    end
end)

for _, gui in ipairs(CoreGui:GetChildren()) do
    local name = Normalize(gui.Name)
    if name == "screengui" then
        hubGui = gui
        gui.Enabled = false
    elseif name == "bananacathubbtn" then
        hubBtn = gui
        gui.Enabled = false
        for _, obj in ipairs(gui:GetDescendants()) do
            DestroyImageIfInButton(obj)
        end
    end
end

CoreGui.DescendantAdded:Connect(function(obj)
    DestroyImageIfInButton(obj)
end)

local FileAPI = {
	list = listfiles or list_files or function() return {} end,
	read = readfile or read_file or function() return nil end,
	write = writefile or write_file or function() end,
	isfolder = isfolder or function() return false end,
	makefolder = makefolder or function() end,
	removefolder = delfolder or function() return false end,
	delete = delfile or function() end
}

local sourceFolder = "Banana Cat Hub"
local targetFolder = "Triple Hub"
local existedBefore = false
local snapshot = {}

pcall(function()
	existedBefore = FileAPI.isfolder(sourceFolder)
	if existedBefore then
		local ok, list = pcall(FileAPI.list, sourceFolder)
		if ok and type(list) == "table" then
			for _, path in ipairs(list) do
				local name = path:match("[^/\\]+$")
				snapshot[name] = true
			end
		end
	end
end)

pcall(function()
	if not FileAPI.isfolder(targetFolder) then
		FileAPI.makefolder(targetFolder)
	end
end)

local fileCache = {}
local alreadyCopied = {}

task.spawn(function()
	while true do
		task.wait(2)
		if FileAPI.isfolder(sourceFolder) then
			local ok, list = pcall(FileAPI.list, sourceFolder)
			if ok and type(list) == "table" then
				for _, path in ipairs(list) do
					local name = path:match("[^/\\]+$")
					local fullPath = sourceFolder .. "/" .. name

					local isNew = not snapshot[name] and name:lower():match("%.json$")
					if isNew then
						local okRead, content = pcall(FileAPI.read, fullPath)
						if okRead and type(content) == "string" then
							local previous = fileCache[name]
							if previous ~= content then
								fileCache[name] = content
								local savePath = targetFolder .. "/" .. name
								pcall(function()
									FileAPI.write(savePath, content)
								end)
							end
						end
					end
				end
			end
		end
	end
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/obiiyeuem/vthangsitink/d3a097be25879cc0340aaa3d0c6670db64b89c7a/BF-BananaCat.lua"))()
